
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Sun Feb 18 00:22:21 CST 2018
//----------------------------------------------------

package proyecto1_201122872.AnalizadorCHTML;

import proyecto1_201122872.AnalizadorCHTML.simbolosCHTML;
import java_cup.runtime.*;
import java.io.*;
import java.lang.*;
import java.util.*;
import java.util.ArrayList;
import proyecto1_201122872.CHTML.ElemetoPropiedad.*;
import proyecto1_201122872.CHTML.BODY.*;
import proyecto1_201122872.CHTML.Etiqueta;
import proyecto1_201122872.CHTML.Chtml;

/** CUP v0.10k generated parser.
  * @version Sun Feb 18 00:22:21 CST 2018
  */
public class Parser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public Parser() {super();}

  /** Constructor which sets the default scanner. */
  public Parser(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\252\000\002\002\004\000\002\003\003\000\002\020" +
    "\006\000\002\021\006\000\002\022\006\000\002\023\006" +
    "\000\002\012\006\000\002\013\006\000\002\014\006\000" +
    "\002\015\006\000\002\016\006\000\002\024\003\000\002" +
    "\024\003\000\002\024\003\000\002\024\003\000\002\024" +
    "\003\000\002\025\004\000\002\025\003\000\002\106\003" +
    "\000\002\106\003\000\002\107\004\000\002\107\003\000" +
    "\002\105\003\000\002\105\003\000\002\102\004\000\002" +
    "\102\003\000\002\110\003\000\002\110\003\000\002\110" +
    "\003\000\002\103\004\000\002\103\003\000\002\104\003" +
    "\000\002\104\003\000\002\104\003\000\002\077\004\000" +
    "\002\077\003\000\002\100\003\000\002\100\003\000\002" +
    "\101\003\000\002\101\004\000\002\052\005\000\002\052" +
    "\006\000\002\053\005\000\002\054\005\000\002\054\006" +
    "\000\002\055\005\000\002\056\005\000\002\056\006\000" +
    "\002\057\005\000\002\060\006\000\002\060\005\000\002" +
    "\061\005\000\002\032\005\000\002\032\006\000\002\033" +
    "\005\000\002\034\005\000\002\034\006\000\002\035\005" +
    "\000\002\040\005\000\002\040\006\000\002\041\005\000" +
    "\002\036\005\000\002\036\006\000\002\037\005\000\002" +
    "\042\005\000\002\042\006\000\002\043\005\000\002\074" +
    "\005\000\002\074\006\000\002\075\005\000\002\044\005" +
    "\000\002\044\006\000\002\045\005\000\002\046\006\000" +
    "\002\046\005\000\002\047\005\000\002\050\005\000\002" +
    "\050\006\000\002\051\005\000\002\062\006\000\002\062" +
    "\005\000\002\063\005\000\002\064\005\000\002\064\006" +
    "\000\002\065\005\000\002\070\006\000\002\070\005\000" +
    "\002\071\005\000\002\066\005\000\002\066\006\000\002" +
    "\067\005\000\002\076\005\000\002\072\006\000\002\072" +
    "\005\000\002\073\005\000\002\026\005\000\002\026\006" +
    "\000\002\027\005\000\002\030\005\000\002\030\006\000" +
    "\002\031\005\000\002\111\006\000\002\011\003\000\002" +
    "\011\003\000\002\011\003\000\002\010\004\000\002\010" +
    "\003\000\002\112\005\000\002\112\004\000\002\113\004" +
    "\000\002\114\004\000\002\115\005\000\002\115\004\000" +
    "\002\116\004\000\002\116\005\000\002\117\005\000\002" +
    "\117\004\000\002\120\005\000\002\120\004\000\002\121" +
    "\005\000\002\121\004\000\002\122\005\000\002\122\004" +
    "\000\002\123\005\000\002\123\004\000\002\124\005\000" +
    "\002\124\004\000\002\130\005\000\002\130\004\000\002" +
    "\131\004\000\002\131\003\000\002\125\005\000\002\125" +
    "\004\000\002\126\005\000\002\126\004\000\002\127\003" +
    "\000\002\134\005\000\002\134\004\000\002\142\005\000" +
    "\002\142\004\000\002\141\005\000\002\141\004\000\002" +
    "\140\003\000\002\140\003\000\002\136\004\000\002\136" +
    "\003\000\002\137\005\000\002\137\004\000\002\145\004" +
    "\000\002\145\003\000\002\135\005\000\002\135\004\000" +
    "\002\132\003\000\002\132\003\000\002\132\003\000\002" +
    "\132\003\000\002\132\003\000\002\132\003\000\002\132" +
    "\003\000\002\132\003\000\002\132\003\000\002\132\003" +
    "\000\002\132\003\000\002\133\004\000\002\133\003\000" +
    "\002\143\003\000\002\143\003\000\002\143\003\000\002" +
    "\144\004\000\002\144\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0142\000\004\004\005\001\002\000\004\002\000\001" +
    "\002\000\004\007\u0141\001\002\000\004\004\013\001\002" +
    "\000\004\002\010\001\002\000\004\002\001\001\002\000" +
    "\004\004\u011a\001\002\000\004\004\053\001\002\000\004" +
    "\011\014\001\002\000\016\005\026\060\015\061\030\062" +
    "\031\063\016\064\025\001\002\000\004\074\050\001\002" +
    "\000\004\074\045\001\002\000\026\005\ufff5\060\ufff5\061" +
    "\ufff5\062\ufff5\063\ufff5\064\ufff5\065\ufff5\066\ufff5\067\ufff5" +
    "\070\ufff5\001\002\000\016\005\ufff0\060\ufff0\061\ufff0\062" +
    "\ufff0\063\ufff0\064\ufff0\001\002\000\026\005\ufff6\060\ufff6" +
    "\061\ufff6\062\ufff6\063\ufff6\064\ufff6\065\ufff6\066\ufff6\067" +
    "\ufff6\070\ufff6\001\002\000\026\005\ufff3\060\ufff3\061\ufff3" +
    "\062\ufff3\063\ufff3\064\ufff3\065\ufff3\066\ufff3\067\ufff3\070" +
    "\ufff3\001\002\000\026\005\ufff4\060\ufff4\061\ufff4\062\ufff4" +
    "\063\ufff4\064\ufff4\065\ufff4\066\ufff4\067\ufff4\070\ufff4\001" +
    "\002\000\016\005\044\060\015\061\030\062\031\063\016" +
    "\064\025\001\002\000\004\074\040\001\002\000\004\004" +
    "\uffa2\001\002\000\026\005\ufff2\060\ufff2\061\ufff2\062\ufff2" +
    "\063\ufff2\064\ufff2\065\ufff2\066\ufff2\067\ufff2\070\ufff2\001" +
    "\002\000\004\074\035\001\002\000\004\074\032\001\002" +
    "\000\004\077\033\001\002\000\004\075\034\001\002\000" +
    "\026\005\ufff9\060\ufff9\061\ufff9\062\ufff9\063\ufff9\064\ufff9" +
    "\065\ufff9\066\ufff9\067\ufff9\070\ufff9\001\002\000\004\077" +
    "\036\001\002\000\004\075\037\001\002\000\026\005\ufffa" +
    "\060\ufffa\061\ufffa\062\ufffa\063\ufffa\064\ufffa\065\ufffa\066" +
    "\ufffa\067\ufffa\070\ufffa\001\002\000\004\077\041\001\002" +
    "\000\004\075\042\001\002\000\026\005\ufff7\060\ufff7\061" +
    "\ufff7\062\ufff7\063\ufff7\064\ufff7\065\ufff7\066\ufff7\067\ufff7" +
    "\070\ufff7\001\002\000\016\005\ufff1\060\ufff1\061\ufff1\062" +
    "\ufff1\063\ufff1\064\ufff1\001\002\000\004\004\uffa1\001\002" +
    "\000\004\077\046\001\002\000\004\075\047\001\002\000" +
    "\026\005\ufff8\060\ufff8\061\ufff8\062\ufff8\063\ufff8\064\ufff8" +
    "\065\ufff8\066\ufff8\067\ufff8\070\ufff8\001\002\000\004\077" +
    "\051\001\002\000\004\075\052\001\002\000\026\005\ufffb" +
    "\060\ufffb\061\ufffb\062\ufffb\063\ufffb\064\ufffb\065\ufffb\066" +
    "\ufffb\067\ufffb\070\ufffb\001\002\000\004\017\u010d\001\002" +
    "\000\004\004\100\001\002\000\004\004\057\001\002\000" +
    "\004\002\uff9c\001\002\000\004\010\060\001\002\000\004" +
    "\005\061\001\002\000\004\002\uff9d\001\002\000\004\004" +
    "\u0108\001\002\000\006\004\u0101\006\u0103\001\002\000\004" +
    "\004\uff68\001\002\000\006\004\374\006\375\001\002\000" +
    "\004\004\uff60\001\002\000\006\004\367\077\366\001\002" +
    "\000\006\004\360\006\361\001\002\000\004\004\uff67\001" +
    "\002\000\004\004\uff64\001\002\000\004\004\uff90\001\002" +
    "\000\004\004\uff65\001\002\000\006\004\351\006\353\001" +
    "\002\000\004\004\272\001\002\000\004\004\uff5f\001\002" +
    "\000\032\020\177\023\165\025\172\027\200\031\171\033" +
    "\173\035\167\045\166\047\174\051\170\055\176\057\175" +
    "\001\002\000\004\004\134\001\002\000\004\004\uff66\001" +
    "\002\000\004\004\uff7a\001\002\000\004\004\uff5d\001\002" +
    "\000\006\004\125\006\126\001\002\000\004\004\uff69\001" +
    "\002\000\004\004\uff63\001\002\000\004\004\uff61\001\002" +
    "\000\004\004\uff62\001\002\000\006\004\116\006\117\001" +
    "\002\000\004\004\100\001\002\000\004\004\uff8f\001\002" +
    "\000\004\004\uff5e\001\002\000\004\056\122\001\002\000" +
    "\004\004\116\001\002\000\004\004\uff7b\001\002\000\004" +
    "\004\uff7c\001\002\000\004\005\123\001\002\000\004\004" +
    "\uffa3\001\002\000\004\004\uff8d\001\002\000\004\026\130" +
    "\001\002\000\004\004\125\001\002\000\004\004\uff8e\001" +
    "\002\000\004\005\131\001\002\000\004\004\uffbf\001\002" +
    "\000\004\004\uff7f\001\002\000\004\004\uff7d\001\002\000" +
    "\006\052\150\053\147\001\002\000\004\004\134\001\002" +
    "\000\006\004\137\006\141\001\002\000\004\054\143\001" +
    "\002\000\004\004\uff81\001\002\000\004\004\137\001\002" +
    "\000\004\004\uff82\001\002\000\004\005\144\001\002\000" +
    "\004\004\uffa7\001\002\000\004\004\uff80\001\002\000\004" +
    "\004\uff7e\001\002\000\020\005\157\060\015\061\030\062" +
    "\031\063\016\064\025\065\153\001\002\000\004\005\151" +
    "\001\002\000\004\004\uffaa\001\002\000\020\005\uffee\060" +
    "\uffee\061\uffee\062\uffee\063\uffee\064\uffee\065\uffee\001\002" +
    "\000\004\074\162\001\002\000\020\005\uffef\060\uffef\061" +
    "\uffef\062\uffef\063\uffef\064\uffef\065\uffef\001\002\000\020" +
    "\005\161\060\015\061\030\062\031\063\016\064\025\065" +
    "\153\001\002\000\020\005\uffec\060\uffec\061\uffec\062\uffec" +
    "\063\uffec\064\uffec\065\uffec\001\002\000\006\004\uffa9\006" +
    "\uffa9\001\002\000\020\005\uffed\060\uffed\061\uffed\062\uffed" +
    "\063\uffed\064\uffed\065\uffed\001\002\000\006\004\uffa8\006" +
    "\uffa8\001\002\000\004\077\163\001\002\000\004\075\164" +
    "\001\002\000\020\005\ufffc\060\ufffc\061\ufffc\062\ufffc\063" +
    "\ufffc\064\ufffc\065\ufffc\001\002\000\016\005\265\060\015" +
    "\061\030\062\031\063\016\064\025\001\002\000\016\005" +
    "\262\060\015\061\030\062\031\063\016\064\025\001\002" +
    "\000\016\005\257\060\015\061\030\062\031\063\016\064" +
    "\025\001\002\000\020\005\253\060\015\061\030\062\031" +
    "\063\016\064\025\066\207\001\002\000\022\005\245\060" +
    "\015\061\030\062\031\063\016\064\025\066\207\067\201" +
    "\001\002\000\016\005\242\060\015\061\030\062\031\063" +
    "\016\064\025\001\002\000\022\005\236\060\015\061\030" +
    "\062\031\063\016\064\025\066\207\067\201\001\002\000" +
    "\016\005\227\060\015\061\030\062\031\063\016\064\025" +
    "\001\002\000\004\005\225\001\002\000\016\005\223\060" +
    "\015\061\030\062\031\063\016\064\025\001\002\000\004" +
    "\005\221\001\002\000\022\005\210\060\015\061\030\062" +
    "\031\063\016\064\025\066\207\067\201\001\002\000\004" +
    "\074\216\001\002\000\022\005\uffe0\060\uffe0\061\uffe0\062" +
    "\uffe0\063\uffe0\064\uffe0\066\uffe0\067\uffe0\001\002\000\022" +
    "\005\uffde\060\uffde\061\uffde\062\uffde\063\uffde\064\uffde\066" +
    "\uffde\067\uffde\001\002\000\022\005\uffe1\060\uffe1\061\uffe1" +
    "\062\uffe1\063\uffe1\064\uffe1\066\uffe1\067\uffe1\001\002\000" +
    "\022\005\uffe2\060\uffe2\061\uffe2\062\uffe2\063\uffe2\064\uffe2" +
    "\066\uffe2\067\uffe2\001\002\000\022\005\215\060\015\061" +
    "\030\062\031\063\016\064\025\066\207\067\201\001\002" +
    "\000\004\074\211\001\002\000\006\004\uffbb\077\uffbb\001" +
    "\002\000\004\077\212\001\002\000\004\075\213\001\002" +
    "\000\022\005\ufffe\060\ufffe\061\ufffe\062\ufffe\063\ufffe\064" +
    "\ufffe\066\ufffe\067\ufffe\001\002\000\022\005\uffdf\060\uffdf" +
    "\061\uffdf\062\uffdf\063\uffdf\064\uffdf\066\uffdf\067\uffdf\001" +
    "\002\000\006\004\uffba\077\uffba\001\002\000\004\077\217" +
    "\001\002\000\004\075\220\001\002\000\022\005\uffff\060" +
    "\uffff\061\uffff\062\uffff\063\uffff\064\uffff\066\uffff\067\uffff" +
    "\001\002\000\004\004\uffc5\001\002\000\016\005\224\060" +
    "\015\061\030\062\031\063\016\064\025\001\002\000\006" +
    "\004\uffa4\006\uffa4\001\002\000\006\004\uffa5\006\uffa5\001" +
    "\002\000\004\004\uffa6\001\002\000\016\005\230\060\015" +
    "\061\030\062\031\063\016\064\025\001\002\000\006\004" +
    "\uffaf\006\uffaf\001\002\000\006\004\uffae\006\uffae\001\002" +
    "\000\022\005\uffe5\060\uffe5\061\uffe5\062\uffe5\063\uffe5\064" +
    "\uffe5\066\uffe5\067\uffe5\001\002\000\022\005\uffe3\060\uffe3" +
    "\061\uffe3\062\uffe3\063\uffe3\064\uffe3\066\uffe3\067\uffe3\001" +
    "\002\000\022\005\uffe6\060\uffe6\061\uffe6\062\uffe6\063\uffe6" +
    "\064\uffe6\066\uffe6\067\uffe6\001\002\000\022\005\240\060" +
    "\015\061\030\062\031\063\016\064\025\066\207\067\201" +
    "\001\002\000\022\005\uffe7\060\uffe7\061\uffe7\062\uffe7\063" +
    "\uffe7\064\uffe7\066\uffe7\067\uffe7\001\002\000\006\004\uffb5" +
    "\006\uffb5\001\002\000\022\005\uffe4\060\uffe4\061\uffe4\062" +
    "\uffe4\063\uffe4\064\uffe4\066\uffe4\067\uffe4\001\002\000\006" +
    "\004\uffb4\006\uffb4\001\002\000\016\005\243\060\015\061" +
    "\030\062\031\063\016\064\025\001\002\000\006\004\uffc1" +
    "\006\uffc1\001\002\000\006\004\uffc0\006\uffc0\001\002\000" +
    "\022\005\246\060\015\061\030\062\031\063\016\064\025" +
    "\066\207\067\201\001\002\000\006\004\uffb7\006\uffb7\001" +
    "\002\000\006\004\uffb8\006\uffb8\001\002\000\020\005\uffe8" +
    "\060\uffe8\061\uffe8\062\uffe8\063\uffe8\064\uffe8\066\uffe8\001" +
    "\002\000\020\005\255\060\015\061\030\062\031\063\016" +
    "\064\025\066\207\001\002\000\020\005\uffea\060\uffea\061" +
    "\uffea\062\uffea\063\uffea\064\uffea\066\uffea\001\002\000\020" +
    "\005\uffeb\060\uffeb\061\uffeb\062\uffeb\063\uffeb\064\uffeb\066" +
    "\uffeb\001\002\000\004\004\uffab\001\002\000\020\005\uffe9" +
    "\060\uffe9\061\uffe9\062\uffe9\063\uffe9\064\uffe9\066\uffe9\001" +
    "\002\000\004\004\uffac\001\002\000\016\005\260\060\015" +
    "\061\030\062\031\063\016\064\025\001\002\000\004\004" +
    "\uffd9\001\002\000\004\004\uffd8\001\002\000\016\005\263" +
    "\060\015\061\030\062\031\063\016\064\025\001\002\000" +
    "\006\004\uffb1\006\uffb1\001\002\000\006\004\uffb2\006\uffb2" +
    "\001\002\000\016\005\266\060\015\061\030\062\031\063" +
    "\016\064\025\001\002\000\004\004\uffbe\001\002\000\004" +
    "\004\uffbd\001\002\000\004\004\uff6a\001\002\000\004\004" +
    "\uff6c\001\002\000\004\004\272\001\002\000\006\036\341" +
    "\037\342\001\002\000\004\004\301\001\002\000\004\004" +
    "\301\001\002\000\004\004\uff72\001\002\000\004\004\uff73" +
    "\001\002\000\006\004\333\006\307\001\002\000\004\004" +
    "\uff6e\001\002\000\010\040\321\041\317\043\320\001\002" +
    "\000\004\004\uff70\001\002\000\006\004\310\006\307\001" +
    "\002\000\006\004\uff5c\006\uff5c\001\002\000\004\004\uff76" +
    "\001\002\000\006\004\310\006\307\001\002\000\006\004" +
    "\uff5a\006\uff5a\001\002\000\010\027\200\031\171\044\313" +
    "\001\002\000\006\004\uff58\006\uff58\001\002\000\006\004" +
    "\uff5b\006\uff5b\001\002\000\004\005\314\001\002\000\004" +
    "\004\uffd4\001\002\000\006\004\uff59\006\uff59\001\002\000" +
    "\004\004\uff77\001\002\000\016\005\327\060\015\061\030" +
    "\062\031\063\016\064\025\001\002\000\016\005\324\060" +
    "\015\061\030\062\031\063\016\064\025\001\002\000\004" +
    "\005\322\001\002\000\004\004\uffce\001\002\000\016\005" +
    "\325\060\015\061\030\062\031\063\016\064\025\001\002" +
    "\000\006\004\uffd6\006\uffd6\001\002\000\006\004\uffd5\006" +
    "\uffd5\001\002\000\016\005\330\060\015\061\030\062\031" +
    "\063\016\064\025\001\002\000\006\004\uffd3\006\uffd3\001" +
    "\002\000\006\004\uffd2\006\uffd2\001\002\000\004\004\uff74" +
    "\001\002\000\006\004\333\006\307\001\002\000\010\027" +
    "\200\031\171\042\334\001\002\000\004\005\335\001\002" +
    "\000\004\004\uffd1\001\002\000\004\004\uff75\001\002\000" +
    "\004\004\uff6f\001\002\000\004\004\uff71\001\002\000\004" +
    "\005\346\001\002\000\016\005\344\060\015\061\030\062" +
    "\031\063\016\064\025\001\002\000\016\005\345\060\015" +
    "\061\030\062\031\063\016\064\025\001\002\000\004\004" +
    "\uffcf\001\002\000\004\004\uffd0\001\002\000\004\004\uffd7" +
    "\001\002\000\004\004\uff6b\001\002\000\004\004\uff6d\001" +
    "\002\000\004\046\355\001\002\000\004\004\uff85\001\002" +
    "\000\004\004\351\001\002\000\004\004\uff86\001\002\000" +
    "\004\005\356\001\002\000\004\004\uffb0\001\002\000\006" +
    "\004\uff89\006\uff89\001\002\000\004\032\363\001\002\000" +
    "\004\004\360\001\002\000\006\004\uff8a\006\uff8a\001\002" +
    "\000\004\005\364\001\002\000\006\004\uffb6\006\uffb6\001" +
    "\002\000\006\004\uff8b\006\uff8b\001\002\000\004\004\367" +
    "\001\002\000\004\030\370\001\002\000\004\005\371\001" +
    "\002\000\006\004\uffb9\006\uffb9\001\002\000\006\004\uff8c" +
    "\006\uff8c\001\002\000\004\004\uff83\001\002\000\004\050" +
    "\377\001\002\000\004\004\374\001\002\000\004\004\uff84" +
    "\001\002\000\004\005\u0100\001\002\000\004\004\uffad\001" +
    "\002\000\004\034\u0105\001\002\000\004\004\uff87\001\002" +
    "\000\004\004\u0101\001\002\000\004\004\uff88\001\002\000" +
    "\004\005\u0106\001\002\000\004\004\uffb3\001\002\000\004" +
    "\004\uff78\001\002\000\032\023\165\024\u010b\025\172\027" +
    "\200\031\171\033\173\035\167\045\166\047\174\051\170" +
    "\055\176\057\175\001\002\000\004\004\u0108\001\002\000" +
    "\004\004\uff79\001\002\000\004\005\u010c\001\002\000\004" +
    "\004\uffbc\001\002\000\020\005\u0113\060\015\061\030\062" +
    "\031\063\016\064\025\070\u010f\001\002\000\020\005\uffdd" +
    "\060\uffdd\061\uffdd\062\uffdd\063\uffdd\064\uffdd\070\uffdd\001" +
    "\002\000\004\074\u0116\001\002\000\020\005\uffdc\060\uffdc" +
    "\061\uffdc\062\uffdc\063\uffdc\064\uffdc\070\uffdc\001\002\000" +
    "\020\005\u0115\060\015\061\030\062\031\063\016\064\025" +
    "\070\u010f\001\002\000\020\005\uffdb\060\uffdb\061\uffdb\062" +
    "\uffdb\063\uffdb\064\uffdb\070\uffdb\001\002\000\004\004\uffc7" +
    "\001\002\000\020\005\uffda\060\uffda\061\uffda\062\uffda\063" +
    "\uffda\064\uffda\070\uffda\001\002\000\004\004\uffc6\001\002" +
    "\000\004\077\u0117\001\002\000\004\075\u0118\001\002\000" +
    "\020\005\ufffd\060\ufffd\061\ufffd\062\ufffd\063\ufffd\064\ufffd" +
    "\070\ufffd\001\002\000\004\004\uff99\001\002\000\012\012" +
    "\u0135\013\u0136\015\u0134\021\u0133\001\002\000\004\004\u011a" +
    "\001\002\000\004\004\uff97\001\002\000\004\004\uff9a\001" +
    "\002\000\004\004\uff95\001\002\000\004\004\uff9b\001\002" +
    "\000\004\004\u012d\001\002\000\006\004\u0127\006\u0128\001" +
    "\002\000\004\004\u0124\001\002\000\004\004\uff94\001\002" +
    "\000\004\014\u0125\001\002\000\004\005\u0126\001\002\000" +
    "\004\004\uffcb\001\002\000\004\022\u012b\001\002\000\004" +
    "\004\u0127\001\002\000\004\004\uff91\001\002\000\004\004" +
    "\uff92\001\002\000\004\005\u012c\001\002\000\004\004\uffc2" +
    "\001\002\000\004\016\u012f\001\002\000\004\004\uff93\001" +
    "\002\000\004\005\u0130\001\002\000\004\004\uffc8\001\002" +
    "\000\004\004\uff98\001\002\000\004\004\uff96\001\002\000" +
    "\016\005\u013f\060\015\061\030\062\031\063\016\064\025" +
    "\001\002\000\006\005\u013c\067\201\001\002\000\004\005" +
    "\u013a\001\002\000\006\005\u0138\067\201\001\002\000\004" +
    "\005\u0139\001\002\000\004\004\uffcd\001\002\000\004\004" +
    "\uffcc\001\002\000\004\004\uffa0\001\002\000\004\005\u013d" +
    "\001\002\000\004\004\uffca\001\002\000\004\004\uffc9\001" +
    "\002\000\016\005\u0140\060\015\061\030\062\031\063\016" +
    "\064\025\001\002\000\006\004\uffc4\006\uffc4\001\002\000" +
    "\006\004\uffc3\006\uffc3\001\002\000\016\005\u0143\060\015" +
    "\061\030\062\031\063\016\064\025\001\002\000\016\005" +
    "\u0144\060\015\061\030\062\031\063\016\064\025\001\002" +
    "\000\004\004\uff9f\001\002\000\004\004\uff9e\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0142\000\010\003\006\030\005\111\003\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\026\010\112\011" +
    "\001\001\000\002\001\001\000\002\001\001\000\024\010" +
    "\u011a\011\u011b\027\u011d\032\u0121\034\u011f\036\u0120\113\u011e" +
    "\114\u011c\115\u0118\001\001\000\006\040\053\116\054\001" +
    "\001\000\002\001\001\000\020\012\020\013\016\014\022" +
    "\015\021\016\026\024\017\025\023\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\016\012\020\013\016\014\022\015\021\016\026\024\042" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\064\041\072\042\104\044\066\046\067" +
    "\050\062\052\075\062\074\064\064\070\100\072\111\074" +
    "\061\076\102\117\105\120\063\121\070\122\101\123\073" +
    "\124\071\125\106\126\110\127\107\132\103\133\112\134" +
    "\065\135\076\001\001\000\004\031\055\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\064\042\104\044\066\046\067\050\062\052\075" +
    "\062\074\064\064\070\100\072\111\074\061\075\u0106\076" +
    "\102\117\105\120\063\121\070\122\101\123\073\124\071" +
    "\125\106\126\110\127\107\132\103\133\u0108\134\065\135" +
    "\076\001\001\000\004\051\u0101\001\001\000\002\001\001" +
    "\000\004\065\372\001\001\000\002\001\001\000\004\045" +
    "\364\001\001\000\004\047\356\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\063\351\001\001\000\012\053\266\060\272\137\267" +
    "\145\270\001\001\000\002\001\001\000\002\001\001\000" +
    "\012\066\135\071\132\130\131\131\134\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\043" +
    "\123\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\073\117\001\001\000" +
    "\062\041\113\042\104\044\066\046\067\050\062\052\075" +
    "\062\074\064\064\070\100\072\111\074\061\076\102\117" +
    "\105\120\063\121\070\122\101\123\073\124\071\125\106" +
    "\126\110\127\107\132\114\134\065\135\076\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\073\120\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\043\126\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\066\135\071\145\130" +
    "\144\001\001\000\004\067\137\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\067\141\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\024\012\020\013\016\014\022\015" +
    "\021\016\026\023\151\024\153\106\155\107\154\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\022\012\020\013\016" +
    "\014\022\015\021\016\026\023\151\024\153\106\157\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\020\012\020\013\016\014\022\015\021" +
    "\016\026\024\017\025\263\001\001\000\020\012\020\013" +
    "\016\014\022\015\021\016\026\024\017\025\260\001\001" +
    "\000\020\012\020\013\016\014\022\015\021\016\026\024" +
    "\017\025\255\001\001\000\024\012\020\013\016\014\022" +
    "\015\021\016\026\021\250\024\251\102\247\105\246\001" +
    "\001\000\026\012\020\013\016\014\022\015\021\016\026" +
    "\020\201\021\203\024\204\077\243\104\202\001\001\000" +
    "\020\012\020\013\016\014\022\015\021\016\026\024\017" +
    "\025\240\001\001\000\026\012\020\013\016\014\022\015" +
    "\021\016\026\020\230\021\232\024\234\103\233\110\231" +
    "\001\001\000\020\012\020\013\016\014\022\015\021\016" +
    "\026\024\017\025\225\001\001\000\002\001\001\000\020" +
    "\012\020\013\016\014\022\015\021\016\026\024\017\025" +
    "\221\001\001\000\002\001\001\000\026\012\020\013\016" +
    "\014\022\015\021\016\026\020\201\021\203\024\204\077" +
    "\205\104\202\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\024\012\020\013\016\014\022\015\021\016\026\020\201" +
    "\021\203\024\204\104\213\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\016\012\020\013\016\014\022\015\021\016\026\024" +
    "\042\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\016\012\020\013\016\014\022\015\021\016" +
    "\026\024\042\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\024\012\020\013\016\014\022\015\021\016\026\020\230" +
    "\021\232\024\234\110\236\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\016" +
    "\012\020\013\016\014\022\015\021\016\026\024\042\001" +
    "\001\000\002\001\001\000\002\001\001\000\024\012\020" +
    "\013\016\014\022\015\021\016\026\020\201\021\203\024" +
    "\204\104\213\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\022\012\020\013\016\014\022\015" +
    "\021\016\026\021\250\024\251\105\253\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\016\012\020\013\016\014\022" +
    "\015\021\016\026\024\042\001\001\000\002\001\001\000" +
    "\002\001\001\000\016\012\020\013\016\014\022\015\021" +
    "\016\026\024\042\001\001\000\002\001\001\000\002\001" +
    "\001\000\016\012\020\013\016\014\022\015\021\016\026" +
    "\024\042\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\053\346\060\272" +
    "\137\347\001\001\000\002\001\001\000\020\054\302\056" +
    "\276\061\277\136\273\140\301\141\274\142\275\001\001" +
    "\000\016\054\302\056\276\061\336\140\337\141\274\142" +
    "\275\001\001\000\002\001\001\000\002\001\001\000\020" +
    "\044\066\046\067\057\330\120\311\121\303\143\310\144" +
    "\331\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\020\044\066\046\067\055\304\120\311\121" +
    "\303\143\310\144\305\001\001\000\002\001\001\000\002" +
    "\001\001\000\016\044\066\046\067\055\315\120\311\121" +
    "\303\143\314\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\020" +
    "\012\020\013\016\014\022\015\021\016\026\024\017\025" +
    "\325\001\001\000\020\012\020\013\016\014\022\015\021" +
    "\016\026\024\017\025\322\001\001\000\002\001\001\000" +
    "\002\001\001\000\016\012\020\013\016\014\022\015\021" +
    "\016\026\024\042\001\001\000\002\001\001\000\002\001" +
    "\001\000\016\012\020\013\016\014\022\015\021\016\026" +
    "\024\042\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\016\044\066\046\067\057\335\120\311" +
    "\121\303\143\314\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\020\012\020\013" +
    "\016\014\022\015\021\016\026\024\017\025\342\001\001" +
    "\000\016\012\020\013\016\014\022\015\021\016\026\024" +
    "\042\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\063\353\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\047\361\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\045\371\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\065\375\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\051\u0103\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\062\042\104\044\066\046\067" +
    "\050\062\052\075\062\074\064\064\070\100\072\111\074" +
    "\061\075\u0109\076\102\117\105\120\063\121\070\122\101" +
    "\123\073\124\071\125\106\126\110\127\107\132\114\134" +
    "\065\135\076\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\024\012\020\013\016\014\022\015" +
    "\021\016\026\022\u010f\024\u010d\100\u0111\101\u0110\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\022\012\020\013\016\014\022\015\021\016\026\022\u010f" +
    "\024\u010d\100\u0113\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\022\011\u0130\027\u0131\032\u0121\034\u011f" +
    "\036\u0120\113\u011e\114\u011c\115\u0118\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\035\u012d\001\001\000\004\037\u0128\001\001\000" +
    "\004\033\u0122\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\037\u0129\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\020\012\020\013\016\014" +
    "\022\015\021\016\026\024\017\025\u013d\001\001\000\004" +
    "\020\u013a\001\001\000\002\001\001\000\004\020\u0136\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\016\012\020\013\016\014\022\015\021" +
    "\016\026\024\042\001\001\000\002\001\001\000\002\001" +
    "\001\000\020\012\020\013\016\014\022\015\021\016\026" +
    "\024\017\025\u0141\001\001\000\016\012\020\013\016\014" +
    "\022\015\021\016\026\024\042\001\001\000\002\001\001" +
    "\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



 /* -------------------------==: DECLARAR EL ARBOL :==--------------------------*/
    //public Nodo Gramaticas;     
    public static String cadena;
	public  Chtml codigoHTML;
	

/* -------------------------==: ERROR SINTACTICO :==--------------------------*/
public void syntax_error(Symbol s){
    System.out.println("Error Sintactico -> lexema: " +s.value+" Linea: " +s.right+ " Columna: "+s.left);
    cadena += "<tr>"
                + "<td><center><b>" + s.value + "</b></center></td>"
                + "<td><center><b>" + s.right + "</b></center></td>"
                + "<td><center><b>" + s.left+ "</b></center></td>"
                + "</tr>";
}

/* ------------------==: ERROR SINTACTICO NO RECUPERABLE :==------------------*/
public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
    System.out.println("Error Sintactico No Recuperable-> Lexema: " +s.value+" Linea: "+s.right+ " Columna: "+s.left);
     cadena += "<tr>"
                + "<td><center><b>" + s.value + "</b></center></td>"
                + "<td><center><b>" + s.right + "</b></center></td>"
                + "<td><center><b>" + s.left+ "</b></center></td>"
                + "</tr>";
}


}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$Parser$actions {


//Operaciones_Listas operaciones = new Operaciones_Listas();




  private final Parser parser;

  /** Constructor */
  CUP$Parser$actions(Parser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$Parser$do_action(
    int                        CUP$Parser$act_num,
    java_cup.runtime.lr_parser CUP$Parser$parser,
    java.util.Stack            CUP$Parser$stack,
    int                        CUP$Parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Parser$result;

      /* select the action based on the action number */
      switch (CUP$Parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // cuerpoCelda ::= sentenciaCelda 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(98/*cuerpoCelda*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // cuerpoCelda ::= cuerpoCelda sentenciaCelda 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(98/*cuerpoCelda*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // sentenciaCelda ::= cadena2 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(97/*sentenciaCelda*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // sentenciaCelda ::= IMAGEN 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(97/*sentenciaCelda*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // sentenciaCelda ::= BOTON 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(97/*sentenciaCelda*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // cuerpoCuerpo ::= sentenciaCuerpo 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		 List<Etiqueta> etiquetas = new ArrayList<Etiqueta>();
							  etiquetas.add((Etiqueta)a);
							  RESULT= etiquetas;		
							
              CUP$Parser$result = new java_cup.runtime.Symbol(89/*cuerpoCuerpo*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // cuerpoCuerpo ::= cuerpoCuerpo sentenciaCuerpo 
            {
              Object RESULT = null;
		int listaleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int listaright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object lista = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		List<Etiqueta> etiquetas = (ArrayList<Etiqueta>)lista;
														   etiquetas.add((Etiqueta)a);
															RESULT= etiquetas;
															
              CUP$Parser$result = new java_cup.runtime.Symbol(89/*cuerpoCuerpo*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // sentenciaCuerpo ::= TABLA 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(88/*sentenciaCuerpo*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // sentenciaCuerpo ::= PANEL 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(88/*sentenciaCuerpo*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // sentenciaCuerpo ::= SALTO 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT=a;
              CUP$Parser$result = new java_cup.runtime.Symbol(88/*sentenciaCuerpo*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // sentenciaCuerpo ::= SPINNER 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT=a;
              CUP$Parser$result = new java_cup.runtime.Symbol(88/*sentenciaCuerpo*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // sentenciaCuerpo ::= CAJA 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(88/*sentenciaCuerpo*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // sentenciaCuerpo ::= CAJA_TEXTO 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT=a;
              CUP$Parser$result = new java_cup.runtime.Symbol(88/*sentenciaCuerpo*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // sentenciaCuerpo ::= TEXTO_A 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT=a;
              CUP$Parser$result = new java_cup.runtime.Symbol(88/*sentenciaCuerpo*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // sentenciaCuerpo ::= ENLACE 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT=a;
              CUP$Parser$result = new java_cup.runtime.Symbol(88/*sentenciaCuerpo*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // sentenciaCuerpo ::= BOTON 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT=a;
              CUP$Parser$result = new java_cup.runtime.Symbol(88/*sentenciaCuerpo*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // sentenciaCuerpo ::= IMAGEN 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT=a;
              CUP$Parser$result = new java_cup.runtime.Symbol(88/*sentenciaCuerpo*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // sentenciaCuerpo ::= TEXTO 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT=a;
              CUP$Parser$result = new java_cup.runtime.Symbol(88/*sentenciaCuerpo*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // TABLA ::= tagTabla tagFinTabla 
            {
              Object RESULT = null;
		int mleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;

              CUP$Parser$result = new java_cup.runtime.Symbol(91/*TABLA*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // TABLA ::= tagTabla LISTA_TABLA tagFinTabla 
            {
              Object RESULT = null;
		int mleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;

              CUP$Parser$result = new java_cup.runtime.Symbol(91/*TABLA*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // LISTA_TABLA ::= FILA 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(99/*LISTA_TABLA*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // LISTA_TABLA ::= LISTA_TABLA FILA 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(99/*LISTA_TABLA*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // FILA ::= tagFil_t tagFinFil_t 
            {
              Object RESULT = null;
		int mleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;

              CUP$Parser$result = new java_cup.runtime.Symbol(93/*FILA*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // FILA ::= tagFil_t LISTA_FILA tagFinFil_t 
            {
              Object RESULT = null;
		int mleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;

              CUP$Parser$result = new java_cup.runtime.Symbol(93/*FILA*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // LISTA_FILA ::= ELEMENTO_FILA 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(92/*LISTA_FILA*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // LISTA_FILA ::= LISTA_FILA ELEMENTO_FILA 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(92/*LISTA_FILA*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // ELEMENTO_FILA ::= CELDA_ENCABEZADO 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(94/*ELEMENTO_FILA*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // ELEMENTO_FILA ::= CELDA 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(94/*ELEMENTO_FILA*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // CELDA_ENCABEZADO ::= tagCb tagFinCb 
            {
              Object RESULT = null;
		int mleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;

              CUP$Parser$result = new java_cup.runtime.Symbol(95/*CELDA_ENCABEZADO*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // CELDA_ENCABEZADO ::= tagCb cuerpoCelda tagFinCb 
            {
              Object RESULT = null;
		int mleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;

              CUP$Parser$result = new java_cup.runtime.Symbol(95/*CELDA_ENCABEZADO*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // CELDA ::= tagCt tagFinCt 
            {
              Object RESULT = null;
		int mleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;

              CUP$Parser$result = new java_cup.runtime.Symbol(96/*CELDA*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // CELDA ::= tagCt cuerpoCelda tagFinCt 
            {
              Object RESULT = null;
		int mleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;

              CUP$Parser$result = new java_cup.runtime.Symbol(96/*CELDA*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // PANEL ::= tagPanel tagFinPanel 
            {
              Object RESULT = null;
		int mleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;

              CUP$Parser$result = new java_cup.runtime.Symbol(90/*PANEL*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // PANEL ::= tagPanel cuerpoCuerpo tagFinPanel 
            {
              Object RESULT = null;
		int mleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;

              CUP$Parser$result = new java_cup.runtime.Symbol(90/*PANEL*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // SALTO ::= tagSaltoFin 
            {
              Object RESULT = null;
		Salto br = new Salto(); RESULT= br;
              CUP$Parser$result = new java_cup.runtime.Symbol(85/*SALTO*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // SPINNER ::= tagSpinner tagFinSpinner 
            {
              Object RESULT = null;
		int mleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		Spinner img = new Spinner(m,""); RESULT= img;
              CUP$Parser$result = new java_cup.runtime.Symbol(84/*SPINNER*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // SPINNER ::= tagSpinner cadena2 tagFinSpinner 
            {
              Object RESULT = null;
		int mleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		String c = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		Spinner img = new Spinner(m,c); RESULT= img;
              CUP$Parser$result = new java_cup.runtime.Symbol(84/*SPINNER*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // CAJA ::= tagCaja tagFinCaja 
            {
              Object RESULT = null;
		int mleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;

              CUP$Parser$result = new java_cup.runtime.Symbol(83/*CAJA*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // CAJA ::= tagCaja listaOpciones tagFinCaja 
            {
              Object RESULT = null;
		int mleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;

              CUP$Parser$result = new java_cup.runtime.Symbol(83/*CAJA*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // listaOpciones ::= OPCION 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(87/*listaOpciones*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // listaOpciones ::= listaOpciones OPCION 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(87/*listaOpciones*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // OPCION ::= tagOpcion tagFinOpcion 
            {
              Object RESULT = null;
		int mleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		Opcion img = new Opcion(m,""); RESULT= img;
              CUP$Parser$result = new java_cup.runtime.Symbol(86/*OPCION*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // OPCION ::= tagOpcion cadena2 tagFinOpcion 
            {
              Object RESULT = null;
		int mleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		String c = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		Opcion img = new Opcion(m,c); RESULT= img;
              CUP$Parser$result = new java_cup.runtime.Symbol(86/*OPCION*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // CAJA_TEXTO ::= tagCaja_texto tagFinCaja_texto 
            {
              Object RESULT = null;
		int mleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		caja_texto img = new caja_texto(m,""); RESULT= img;
              CUP$Parser$result = new java_cup.runtime.Symbol(82/*CAJA_TEXTO*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // CAJA_TEXTO ::= tagCaja_texto cadena2 tagFinCaja_texto 
            {
              Object RESULT = null;
		int mleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		String c = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		caja_texto img = new caja_texto(m,c); RESULT= img;
              CUP$Parser$result = new java_cup.runtime.Symbol(82/*CAJA_TEXTO*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // TEXTO_A ::= tagTexto_a tagFinTexto_a 
            {
              Object RESULT = null;
		int mleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		Texto_a img = new Texto_a(m,""); RESULT= img;
              CUP$Parser$result = new java_cup.runtime.Symbol(81/*TEXTO_A*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // TEXTO_A ::= tagTexto_a cadena2 tagFinTexto_a 
            {
              Object RESULT = null;
		int mleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		String c = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		Texto_a img = new Texto_a(m,c); RESULT= img;
              CUP$Parser$result = new java_cup.runtime.Symbol(81/*TEXTO_A*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // ENLACE ::= tagEnlace tagFinEnlace 
            {
              Object RESULT = null;
		int mleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		Enlace img = new Enlace(m,""); RESULT= img;
              CUP$Parser$result = new java_cup.runtime.Symbol(80/*ENLACE*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // ENLACE ::= tagEnlace cadena2 tagFinEnlace 
            {
              Object RESULT = null;
		int mleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		String c = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		Enlace img = new Enlace(m,c); RESULT= img;
              CUP$Parser$result = new java_cup.runtime.Symbol(80/*ENLACE*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // BOTON ::= tagBoton tagFinBoton 
            {
              Object RESULT = null;
		int mleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		Boton img = new Boton(m,""); RESULT= img;
              CUP$Parser$result = new java_cup.runtime.Symbol(79/*BOTON*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // BOTON ::= tagBoton cadena2 tagFinBoton 
            {
              Object RESULT = null;
		int mleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		String c = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		Boton img = new Boton(m,c); RESULT= img;
              CUP$Parser$result = new java_cup.runtime.Symbol(79/*BOTON*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // IMAGEN ::= tagImagen tagFinImagen 
            {
              Object RESULT = null;
		int mleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		Imagen img = new Imagen(m,""); RESULT= img;
              CUP$Parser$result = new java_cup.runtime.Symbol(78/*IMAGEN*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // IMAGEN ::= tagImagen cadena tagFinImagen 
            {
              Object RESULT = null;
		int mleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		String c = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		Imagen img = new Imagen(m,c); RESULT= img;
              CUP$Parser$result = new java_cup.runtime.Symbol(78/*IMAGEN*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // TEXTO ::= tagTexto tagFinTexto 
            {
              Object RESULT = null;
		int mleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		 Texto txt = new Texto(m ,""); RESULT= txt;
              CUP$Parser$result = new java_cup.runtime.Symbol(77/*TEXTO*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // TEXTO ::= tagTexto cadena2 tagFinTexto 
            {
              Object RESULT = null;
		int mleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		String c = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		 Texto txt = new Texto(m ,c); RESULT= txt;
              CUP$Parser$result = new java_cup.runtime.Symbol(77/*TEXTO*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // CUERPO ::= tagCuerpo cuerpoCuerpo tagFinCuerpo 
            {
              Object RESULT = null;
		int mleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		Cuerpo p = new Cuerpo(m,c); RESULT = p;
              CUP$Parser$result = new java_cup.runtime.Symbol(76/*CUERPO*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // CUERPO ::= tagCuerpo tagFinCuerpo 
            {
              Object RESULT = null;
		int mleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		Cuerpo p = new Cuerpo(m); RESULT = p;
              CUP$Parser$result = new java_cup.runtime.Symbol(76/*CUERPO*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // TITULO ::= tagTitulo tagFinTitulo 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(75/*TITULO*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // TITULO ::= tagTitulo cadena2 tagFinTitulo 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(75/*TITULO*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // CCSS ::= tagCcss tagFinCcss 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(74/*CCSS*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // CCJS ::= tagCjs tagFinCjs 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(73/*CCJS*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // ENCABEZADO ::= tagEncabezado tagFinEncabezado 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(72/*ENCABEZADO*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // ENCABEZADO ::= tagEncabezado cuerpoHeader tagFinEncabezado 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(72/*ENCABEZADO*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // cuerpoHeader ::= elementoHeader 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(6/*cuerpoHeader*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // cuerpoHeader ::= cuerpoHeader elementoHeader 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(6/*cuerpoHeader*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // elementoHeader ::= TITULO 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(7/*elementoHeader*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // elementoHeader ::= CCSS 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(7/*elementoHeader*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // elementoHeader ::= CCJS 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(7/*elementoHeader*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // CHTML ::= tagChtml ENCABEZADO CUERPO tagFinChtml 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-3)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		Chtml ht= new Chtml(a,e,c); RESULT= ht;
              CUP$Parser$result = new java_cup.runtime.Symbol(71/*CHTML*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // tagFinChtml ::= menor finChtml mayor 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(23/*tagFinChtml*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // tagChtml ::= menor chtml listaPropiedadesGenerales mayor 
            {
              Object RESULT = null;
		int bleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		List<propiedad> lista = (ArrayList<propiedad>)b;
														RESULT = lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(22/*tagChtml*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // tagChtml ::= menor chtml mayor 
            {
              Object RESULT = null;
		List<propiedad> lista = new ArrayList<>();
									RESULT= lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(22/*tagChtml*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // tagFinEncabezado ::= menor finEncabezado mayor 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(21/*tagFinEncabezado*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // tagEncabezado ::= menor encabezado listaPropiedadesGenerales mayor 
            {
              Object RESULT = null;
		int bleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		List<propiedad> lista = (ArrayList<propiedad>)b;
														RESULT = lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(20/*tagEncabezado*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // tagEncabezado ::= menor encabezado mayor 
            {
              Object RESULT = null;
		List<propiedad> lista = new ArrayList<>();
									RESULT= lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(20/*tagEncabezado*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // tagFinSpinner ::= menor finSpinner mayor 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(57/*tagFinSpinner*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // tagSpinner ::= menor spinner mayor 
            {
              Object RESULT = null;
		List<propiedad> lista = new ArrayList<>();
									RESULT= lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(56/*tagSpinner*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // tagSpinner ::= menor spinner listaPropiedadesGenerales mayor 
            {
              Object RESULT = null;
		int bleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		List<propiedad> lista = (ArrayList<propiedad>)b;
														RESULT = lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(56/*tagSpinner*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // tagSaltoFin ::= menor saltoFin mayor 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(60/*tagSaltoFin*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // tagFinOpcion ::= menor finOpcion mayor 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(53/*tagFinOpcion*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // tagOpcion ::= menor opcion listaPropiedadesOpcion mayor 
            {
              Object RESULT = null;
		int bleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		List<propiedad> lista = (ArrayList<propiedad>)b;
														RESULT = lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(52/*tagOpcion*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // tagOpcion ::= menor opcion mayor 
            {
              Object RESULT = null;
		List<propiedad> lista = new ArrayList<>();
									RESULT= lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(52/*tagOpcion*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // tagFinCaja ::= menor finCaja mayor 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(55/*tagFinCaja*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // tagCaja ::= menor caja mayor 
            {
              Object RESULT = null;
		List<propiedad> lista = new ArrayList<>();
									RESULT= lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(54/*tagCaja*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // tagCaja ::= menor caja listaPropiedadeesCajaOpciones mayor 
            {
              Object RESULT = null;
		int bleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		List<propiedad> lista = (ArrayList<propiedad>)b;
														RESULT = lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(54/*tagCaja*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // tagFinCaja_texto ::= menor finCaja_texto mayor 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(51/*tagFinCaja_texto*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // tagCaja_texto ::= menor caja_texto listaPropiedadesGenerales mayor 
            {
              Object RESULT = null;
		int bleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		List<propiedad> lista = (ArrayList<propiedad>)b;
														RESULT = lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(50/*tagCaja_texto*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // tagCaja_texto ::= menor caja_texto mayor 
            {
              Object RESULT = null;
		List<propiedad> lista = new ArrayList<>();
									RESULT= lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(50/*tagCaja_texto*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // tagFinTexto_a ::= menor finTexto_a mayor 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(49/*tagFinTexto_a*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // tagTexto_a ::= menor texto_a mayor 
            {
              Object RESULT = null;
		List<propiedad> lista = new ArrayList<>();
									RESULT= lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(48/*tagTexto_a*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // tagTexto_a ::= menor texto_a listaPropiedadesGenerales mayor 
            {
              Object RESULT = null;
		int bleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		List<propiedad> lista = (ArrayList<propiedad>)b;
														RESULT = lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(48/*tagTexto_a*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // tagFinEnlace ::= menor finEnlace mayor 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(39/*tagFinEnlace*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // tagEnlace ::= menor enlace listaPropiedadesEnlace mayor 
            {
              Object RESULT = null;
		int bleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		List<propiedad> lista = (ArrayList<propiedad>)b;
														RESULT = lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(38/*tagEnlace*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // tagEnlace ::= menor enlace mayor 
            {
              Object RESULT = null;
		List<propiedad> lista = new ArrayList<>();
									RESULT= lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(38/*tagEnlace*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // tagFinBoton ::= menor finBoton mayor 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(37/*tagFinBoton*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // tagBoton ::= menor boton mayor 
            {
              Object RESULT = null;
		List<propiedad> lista = new ArrayList<>();
									RESULT= lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(36/*tagBoton*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // tagBoton ::= menor boton listaPropiedadBoton mayor 
            {
              Object RESULT = null;
		int bleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		List<propiedad> lista = (ArrayList<propiedad>)b;
														RESULT = lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(36/*tagBoton*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // tagFinImagen ::= menor finImagen mayor 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(35/*tagFinImagen*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // tagImagen ::= menor imagen listaPropiedadBoton mayor 
            {
              Object RESULT = null;
		int bleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		List<propiedad> lista = (ArrayList<propiedad>)b;
														RESULT = lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(34/*tagImagen*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // tagImagen ::= menor imagen mayor 
            {
              Object RESULT = null;
		List<propiedad> lista = new ArrayList<>();
									RESULT= lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(34/*tagImagen*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // tagFinPanel ::= menor finPanel mayor 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(59/*tagFinPanel*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // tagPanel ::= menor panel listaPropiedadesGenerales mayor 
            {
              Object RESULT = null;
		int bleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		List<propiedad> lista = (ArrayList<propiedad>)b;
														RESULT = lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(58/*tagPanel*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // tagPanel ::= menor panel mayor 
            {
              Object RESULT = null;
		List<propiedad> lista = new ArrayList<>();
									RESULT= lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(58/*tagPanel*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // tagFinTexto ::= menor finTexto mayor 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(33/*tagFinTexto*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // tagTexto ::= menor texto listaPropiedadesGenerales mayor 
            {
              Object RESULT = null;
		int bleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		List<propiedad> lista = (ArrayList<propiedad>)b;
														RESULT = lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(32/*tagTexto*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // tagTexto ::= menor texto mayor 
            {
              Object RESULT = null;
		List<propiedad> lista = new ArrayList<>();
									RESULT= lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(32/*tagTexto*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // tagFinTitulo ::= menor finTitulo mayor 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(29/*tagFinTitulo*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // tagTitulo ::= menor titulo listaPropiedadesGenerales mayor 
            {
              Object RESULT = null;
		int bleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		List<propiedad> lista = (ArrayList<propiedad>)b;
														RESULT = lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(28/*tagTitulo*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // tagTitulo ::= menor titulo mayor 
            {
              Object RESULT = null;
		List<propiedad> lista = new ArrayList<>();
									RESULT= lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(28/*tagTitulo*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // tagFinCuerpo ::= menor finCuerpo mayor 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(31/*tagFinCuerpo*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // tagCuerpo ::= menor cuerpo listaPropiedadesCuerpo mayor 
            {
              Object RESULT = null;
		int bleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		List<propiedad> lista = (ArrayList<propiedad>)b;
														RESULT = lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(30/*tagCuerpo*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // tagCuerpo ::= menor cuerpo mayor 
            {
              Object RESULT = null;
		List<propiedad> lista = new ArrayList<>();
									RESULT= lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(30/*tagCuerpo*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // tagFinCcss ::= menor finCcss mayor 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(27/*tagFinCcss*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // tagCcss ::= menor ccss rutaPropiedad mayor 
            {
              Object RESULT = null;
		int rtleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int rtright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object rt = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		 List<propiedad> lista = new ArrayList<>();
											lista.add((propiedad)rt);
											RESULT= lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(26/*tagCcss*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // tagCcss ::= menor ccss mayor 
            {
              Object RESULT = null;
		List<propiedad> lista = new ArrayList<>();
									RESULT= lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(26/*tagCcss*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // tagFinCjs ::= menor finCjs mayor 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(25/*tagFinCjs*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // tagCjs ::= menor cjs rutaPropiedad mayor 
            {
              Object RESULT = null;
		int rtleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int rtright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object rt = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		 List<propiedad> lista = new ArrayList<>();
											lista.add((propiedad)rt);
											RESULT= lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(24/*tagCjs*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // tagCjs ::= menor cjs mayor 
            {
              Object RESULT = null;
		List<propiedad> lista = new ArrayList<>();
									RESULT= lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(24/*tagCjs*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // tagFinFil_t ::= menor finFil_t mayor 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(47/*tagFinFil_t*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // tagFil_t ::= menor fil_t mayor 
            {
              Object RESULT = null;
		List<propiedad> lista = new ArrayList<>();
									RESULT= lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(46/*tagFil_t*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // tagFil_t ::= menor fil_t listaPropiedadesGenerales mayor 
            {
              Object RESULT = null;
		int bleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		List<propiedad> lista= (ArrayList<propiedad>)b;
														RESULT= lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(46/*tagFil_t*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // tagFinCb ::= menor finCb mayor 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(45/*tagFinCb*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // tagCb ::= menor cb listaPropiedadesGenerales mayor 
            {
              Object RESULT = null;
		int bleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		List<propiedad> lista= (ArrayList<propiedad>)b;
														RESULT= lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(44/*tagCb*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // tagCb ::= menor cb mayor 
            {
              Object RESULT = null;
		List<propiedad> lista = new ArrayList<>();
									RESULT= lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(44/*tagCb*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // tagFinCt ::= menor finCt mayor 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(43/*tagFinCt*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // tagCt ::= menor ct listaPropiedadesGenerales mayor 
            {
              Object RESULT = null;
		int bleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		List<propiedad> lista= (ArrayList<propiedad>)b;
														RESULT= lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(42/*tagCt*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // tagCt ::= menor ct mayor 
            {
              Object RESULT = null;
		List<propiedad> lista = new ArrayList<>();
									RESULT= lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(42/*tagCt*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // tagFinTabla ::= menor finTabla mayor 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(41/*tagFinTabla*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // tagTabla ::= menor tabla listaPropiedadesGenerales mayor 
            {
              Object RESULT = null;
		int bleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		List<propiedad> lista= (ArrayList<propiedad>)b;
														RESULT= lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(40/*tagTabla*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // tagTabla ::= menor tabla mayor 
            {
              Object RESULT = null;
		List<propiedad> lista = new ArrayList<>();
									RESULT= lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(40/*tagTabla*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // listaPropiedadesCuerpo ::= listaPropiedadesCuerpo propiedadCuerpo 
            {
              Object RESULT = null;
		int bleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		List<propiedad> lista= (List<propiedad>) b;
																		  lista.add((propiedad)a);
																		  RESULT= lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(63/*listaPropiedadesCuerpo*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // listaPropiedadesCuerpo ::= propiedadCuerpo 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		 List<propiedad> lista = new ArrayList<>();
							 lista.add((propiedad)a);
							 RESULT = lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(63/*listaPropiedadesCuerpo*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // propiedadCuerpo ::= fondoPropiedad 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT= a;
              CUP$Parser$result = new java_cup.runtime.Symbol(62/*propiedadCuerpo*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // propiedadCuerpo ::= propiedadGeneral 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT= a;
              CUP$Parser$result = new java_cup.runtime.Symbol(62/*propiedadCuerpo*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // listaPropiedadBoton ::= propiedadBoton 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		 List<propiedad> lista = new ArrayList<>();
							 lista.add((propiedad)a);
							 RESULT = lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(61/*listaPropiedadBoton*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // listaPropiedadBoton ::= listaPropiedadBoton propiedadBoton 
            {
              Object RESULT = null;
		int bleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		List<propiedad> lista= (List<propiedad>) b;
																		  lista.add((propiedad)a);
																		  RESULT= lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(61/*listaPropiedadBoton*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // propiedadBoton ::= rutaPropiedad 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT= a;
              CUP$Parser$result = new java_cup.runtime.Symbol(66/*propiedadBoton*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // propiedadBoton ::= clickPropiedad 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT= a;
              CUP$Parser$result = new java_cup.runtime.Symbol(66/*propiedadBoton*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // propiedadBoton ::= propiedadGeneral 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT= a;
              CUP$Parser$result = new java_cup.runtime.Symbol(66/*propiedadBoton*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // listaPropiedadesEnlace ::= propiedadEnlace 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		 List<propiedad> lista = new ArrayList<>();
							 lista.add((propiedad)a);
							 RESULT = lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(65/*listaPropiedadesEnlace*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // listaPropiedadesEnlace ::= listaPropiedadesEnlace propiedadEnlace 
            {
              Object RESULT = null;
		int bleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		List<propiedad> lista= (List<propiedad>) b;
																		  lista.add((propiedad)a);
																		  RESULT= lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(65/*listaPropiedadesEnlace*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // propiedadEnlace ::= rutaPropiedad 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT= a;
              CUP$Parser$result = new java_cup.runtime.Symbol(70/*propiedadEnlace*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // propiedadEnlace ::= clickPropiedad 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT= a;
              CUP$Parser$result = new java_cup.runtime.Symbol(70/*propiedadEnlace*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // propiedadEnlace ::= propiedadGeneral 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT= a;
              CUP$Parser$result = new java_cup.runtime.Symbol(70/*propiedadEnlace*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // listaPropiedadeesCajaOpciones ::= propiedadCajaOpciones 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		 List<propiedad> lista = new ArrayList<>();
							 lista.add((propiedad)a);
							 RESULT = lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(64/*listaPropiedadeesCajaOpciones*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // listaPropiedadeesCajaOpciones ::= listaPropiedadeesCajaOpciones propiedadCajaOpciones 
            {
              Object RESULT = null;
		int bleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		List<propiedad> lista= (List<propiedad>) b;
																							  lista.add((propiedad)a);
																							  RESULT= lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(64/*listaPropiedadeesCajaOpciones*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // propiedadCajaOpciones ::= clickPropiedad 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT= a;
              CUP$Parser$result = new java_cup.runtime.Symbol(67/*propiedadCajaOpciones*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // propiedadCajaOpciones ::= propiedadGeneral 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT= a;
              CUP$Parser$result = new java_cup.runtime.Symbol(67/*propiedadCajaOpciones*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // listaPropiedadesOpcion ::= propiedadOpcion 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		 List<propiedad> lista = new ArrayList<>();
							 lista.add((propiedad)a);
							 RESULT = lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(69/*listaPropiedadesOpcion*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // listaPropiedadesOpcion ::= listaPropiedadesOpcion propiedadOpcion 
            {
              Object RESULT = null;
		int bleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		List<propiedad> lista= (List<propiedad>) b;
																		  lista.add((propiedad)a);
																		  RESULT= lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(69/*listaPropiedadesOpcion*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // propiedadOpcion ::= valorPropiedad 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT= a;
              CUP$Parser$result = new java_cup.runtime.Symbol(68/*propiedadOpcion*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // propiedadOpcion ::= propiedadGeneral 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT= a;
              CUP$Parser$result = new java_cup.runtime.Symbol(68/*propiedadOpcion*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // listaPropiedadesGenerales ::= propiedadGeneral 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		List<propiedad> propiedades = new ArrayList<>();
							  propiedades.add((propiedad)a);
							  RESULT=propiedades; 
              CUP$Parser$result = new java_cup.runtime.Symbol(19/*listaPropiedadesGenerales*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // listaPropiedadesGenerales ::= listaPropiedadesGenerales propiedadGeneral 
            {
              Object RESULT = null;
		int bleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		 List<propiedad> lista = (List<propiedad>)b;
																				lista.add((propiedad)a);
																				RESULT= lista;
              CUP$Parser$result = new java_cup.runtime.Symbol(19/*listaPropiedadesGenerales*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // propiedadGeneral ::= alineadoPropiedad 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT= a;
              CUP$Parser$result = new java_cup.runtime.Symbol(18/*propiedadGeneral*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // propiedadGeneral ::= anchoPropiedad 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT= a;
              CUP$Parser$result = new java_cup.runtime.Symbol(18/*propiedadGeneral*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // propiedadGeneral ::= altoPropiedad 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT= a;
              CUP$Parser$result = new java_cup.runtime.Symbol(18/*propiedadGeneral*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // propiedadGeneral ::= grupoPropiedad 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT= a;
              CUP$Parser$result = new java_cup.runtime.Symbol(18/*propiedadGeneral*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // propiedadGeneral ::= idPropiedad 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		RESULT= a;
              CUP$Parser$result = new java_cup.runtime.Symbol(18/*propiedadGeneral*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // alineadoPropiedad ::= alineado igualSimb cadena puntoComaSimb 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		propiedadAlineado r= new propiedadAlineado(a); 
															RESULT=r;
														  
              CUP$Parser$result = new java_cup.runtime.Symbol(12/*alineadoPropiedad*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // anchoPropiedad ::= ancho igualSimb cadena puntoComaSimb 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		propiedadAncho r= new propiedadAncho(a); 
															RESULT=r;
														  
              CUP$Parser$result = new java_cup.runtime.Symbol(11/*anchoPropiedad*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // altoPropiedad ::= alto igualSimb cadena puntoComaSimb 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		propiedadAlto r= new propiedadAlto(a); 
															RESULT=r;
														  
              CUP$Parser$result = new java_cup.runtime.Symbol(10/*altoPropiedad*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // grupoPropiedad ::= grupo igualSimb cadena puntoComaSimb 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		propiedadGrupo r= new propiedadGrupo(a); 
															RESULT=r;
														  
              CUP$Parser$result = new java_cup.runtime.Symbol(9/*grupoPropiedad*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // idPropiedad ::= id igualSimb cadena puntoComaSimb 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		propiedadId r= new propiedadId(a); 
															RESULT=r;
														  
              CUP$Parser$result = new java_cup.runtime.Symbol(8/*idPropiedad*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // valorPropiedad ::= valor igualSimb cadena puntoComaSimb 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		propiedadValor r= new propiedadValor(a); 
															RESULT=r;
														  
              CUP$Parser$result = new java_cup.runtime.Symbol(17/*valorPropiedad*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // fondoPropiedad ::= fondo igualSimb cadena puntoComaSimb 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		propiedadFondo r= new propiedadFondo(a); 
															RESULT=r;
														  
              CUP$Parser$result = new java_cup.runtime.Symbol(16/*fondoPropiedad*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // clickPropiedad ::= click igualSimb cadena puntoComaSimb 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		propiedadClick r= new propiedadClick(a); 
															RESULT=r;
														  
              CUP$Parser$result = new java_cup.runtime.Symbol(15/*clickPropiedad*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // rutaPropiedad ::= ruta igualSimb cadena puntoComaSimb 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		propiedadRuta r= new propiedadRuta(a); 
															RESULT=r;
														  
              CUP$Parser$result = new java_cup.runtime.Symbol(14/*rutaPropiedad*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIO ::= CHTML 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		parser.codigoHTML= (Chtml)a;
              CUP$Parser$result = new java_cup.runtime.Symbol(1/*INICIO*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIO EOF 
            {
              Object RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		RESULT = start_val;
              CUP$Parser$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$Parser$parser.done_parsing();
          return CUP$Parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

